% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{seq_start_bda}
\alias{seq_start_bda}
\title{Start a BDA procedure for a code.}
\usage{
seq_start_bda(code, length = 3L)
}
\arguments{
\item{String}{code is a DNA or RNA code as string vector.}
}
\value{
Boolean value. True if the procedure has started
}
\description{
Each added binary dichotomic algorithm (BDA) results one binary digit for each codon.
You can add multiple BDAs for one procedure. To add a rule, you need to start a BDA procedure first.
To do so you can either call \link{code_start_bda} or to start a procedure
for all RNA codons call \link{start_bda}.
To add a BDA simply Call \link{add_bda}. To execute the BDAs call \link{run_bda}.
A binary dichotomic algorithm generates a binary representation of a generic code. For more info on BDAs read:\cr
\emph{M.Gumbel, E.Fimmel, A.Danielli, L.Struengmann. On Models of the Genetic  Code generated by Binary Dichotomic Algorithms}
}
\examples{
seq_start_bda(c("ACG", "CAG"))
add_bda(1, 2, "C", "G", "A", "T")
res.binary <- run_bda()

}
\seealso{
[start_bda()] for all codons, [add_bda] add a BDA,
          [run_bda()] for executing and run the BDAs
}
