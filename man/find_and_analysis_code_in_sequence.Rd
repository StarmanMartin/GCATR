% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{find_and_analysis_code_in_sequence}
\alias{find_and_analysis_code_in_sequence}
\title{Analysis a sequence based on a generic code.}
\usage{
find_and_analysis_code_in_sequence(
  seq,
  code,
  tuple_length = -55555L,
  frame = 0L
)
}
\arguments{
\item{code}{is either a string vector or a string. It can either be a code or a sequence.}

\item{tuple_length}{if code is a sequence, length is the tuple length of the code.}
}
\value{
Returns a List with all analysing results. The list contains the following:\cr
\emph{words} (String vector) all found words of the code in the sequence in the correct order.\cr
\emph{idx_list} (Number vector) the first-letter index of all found words of the code in the sequence in the correct order.\cr
\emph{rest} (String) all parts of the sequence which are not matching the code.\cr
\emph{parts} (String vector) the sequence separated in matching and non matching parts. Odd indexes are matching, even indexes are not matching.\cr
\emph{longest_match} (Number) the longest connected matching sequence.\cr
\emph{total_match_in_percent} (Number) the percentage of the matching parts.\cr
\emph{circularPermutations} (Number vector) list the circular permutation of each word in the siquence which is in the code. 0-> if no circular permution is in the code; 1-> if the word is in the code; 2-> if the 1st circular permutation of the word is in the code; 3->...;
}
\description{
Finds all appearances of a code in a sequence. Finds the longest connected motive of words of the code in the sequence.
The function also calculates the matching bases of the found words in the sequence.
}
\examples{
seq <- "ACGTCGCGACGTACGACGTCGTACTCGATGCAAGATC"
res <- find_and_analysis_code_in_sequence(seq, c("ACG", "TCG"))
res <- find_and_analysis_code_in_sequence(seq, "ACGCG", tuple_length=3)
res <- find_and_analysis_code_in_sequence(seq, "ACG TCG")

}
