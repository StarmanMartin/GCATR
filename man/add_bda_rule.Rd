% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{add_bda_rule}
\alias{add_bda_rule}
\title{Add a BDA rule.}
\usage{
add_bda_rule(i_1, i_2, Q_11, Q_12, Q_21, Q_22)
}
\arguments{
\item{i_1}{A unsigend Integer from 1 - [WORD LENGTH]}

\item{i_2}{A unsigend Integer from 1 - [WORD LENGTH]}

\item{Q_11}{A single character. Has to be one of \{'A', 'C', 'G', 'T', 'U'\}}

\item{Q_12}{A single character. Has to be one of \{'A', 'C', 'G', 'T', 'U'\}}

\item{Q_21}{A single character. Has to be one of \{'A', 'C', 'G', 'T', 'U'\}}

\item{Q_22}{A single character. Has to be one of \{'A', 'C', 'G', 'T', 'U'\}}
}
\value{
Boolean value. True if the rules parameter are correct
}
\description{
A BDA rule defines one step of a binary dichotomic algorithm. To add a rule, you need to start a BDA procedure first.
Call \code{\link{code_start_bda}} to start a BDA procedure.
For more info on BDAs read:
\emph{M.Gumbel, E.Fimmel, A.Danielli, L.Str√ºngmann. On Models of the Genetic Code generated by Binary Dichotomic Algorithms}
}
\examples{
code_start_bda(c("ACG", "CAG"))
add_bda_rule(1, 2, "C", "G", "A", "T")
res.binary <- run_bda()

}
